name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Cache frontend dependencies
        uses: actions/cache@v3
        with:
          path: |
            frontend/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Cache backend dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
          
      - name: Build frontend
        run: |
          cd frontend
          CI=false npm run build
          
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          cd backend
          pip install -r requirements.txt
          
      - name: Verify deployment secrets
        run: |
          echo "Verifying deployment secrets..."
          if [ -n "${{ secrets.DEPLOY_HOST }}" ]; then
            echo "✓ DEPLOY_HOST is properly configured"
          else
            echo "✗ DEPLOY_HOST is not set"
            exit 1
          fi
          if [ -n "${{ secrets.DEPLOY_USERNAME }}" ]; then
            echo "✓ DEPLOY_USERNAME is properly configured"
          else
            echo "✗ DEPLOY_USERNAME is not set"
            exit 1
          fi
          if [ -n "${{ secrets.DEPLOY_PASSWORD }}" ]; then
            echo "✓ DEPLOY_PASSWORD is properly configured"
          else
            echo "✗ DEPLOY_PASSWORD is not set"
            exit 1
          fi
          
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          debug: true
          script: |
            echo "Starting deployment on ${{ secrets.DEPLOY_HOST }}..."
            cd /var/www/viber
            git pull origin main
            
            echo "Deploying frontend..."
            cd frontend
            npm install
            npm run build
            
            echo "Deploying backend..."
            cd ../backend
            source venv/bin/activate
            pip install -r requirements.txt
            
            echo "Restarting services..."
            sudo systemctl restart nginx
            sudo systemctl restart viber-backend.service
            
            echo "Deployment completed successfully!"